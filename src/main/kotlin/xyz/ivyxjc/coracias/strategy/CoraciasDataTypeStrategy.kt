package xyz.ivyxjc.coracias.strategy

import xyz.ivyxjc.coracias.GenericDataType
import java.time.temporal.TemporalAccessor
import java.util.*


/**
 * CoraciasDataTypeStrategy
 * Although coracias uses CoraciasFormatter to format Java object based on the real java type of the object,
 * it may still be useful to hold the more general type of the type in the system.
 *
 * CoraciasDataTypeStrategy provides one way for developers to customize the strategy to generate the general
 * type of one Java Class.
 *
 * For [HtmlCoraciasExport], it use the type generated by [CoraciasDataTypeStrategy] as the html tag <tg>'s class
 */
interface CoraciasDataTypeStrategy {
    fun generateType(clz: Class<out Any>): GenericDataType
}

class DefaultCoraciasDataTypeStrategy : CoraciasDataTypeStrategy {

    override fun generateType(clz: Class<out Any>): GenericDataType {
        return when {
            TemporalAccessor::class.java.isAssignableFrom(clz) -> GenericDataType.DATETIME
            Number::class.java.isAssignableFrom(clz) -> GenericDataType.NUMBER
            Int::class.java.isAssignableFrom(clz) -> GenericDataType.NUMBER
            Long::class.java.isAssignableFrom(clz) -> GenericDataType.NUMBER
            Float::class.java.isAssignableFrom(clz) -> GenericDataType.NUMBER
            Double::class.java.isAssignableFrom(clz) -> GenericDataType.NUMBER
            Date::class.java.isAssignableFrom(clz) -> GenericDataType.DATETIME
            Boolean::class.java.isAssignableFrom(clz) -> GenericDataType.BOOLEAN
            else -> GenericDataType.LITERAL
        }
    }
}
